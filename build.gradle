plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'checkstyle'
    id 'com.github.spotbugs' version '3.0.0'
    id "com.github.sherter.google-java-format" version "0.8"
    id "org.sonarqube" version "2.8"
}

group 'org.me.eduardo'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

bootJar {
    mainClassName = 'org.me.eduardo.Application'
}

checkstyle {
    toolVersion '7.8.1'
    configFile file("config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source ='src/main/java'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}

spotbugs {
    ignoreFailures = false
    toolVersion = "3.1.12"
    sourceSets=[sourceSets.main]
    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
    reportsDir = file("$rootProject.projectDir/build/reports/findbugs")
    reportLevel = "high"
    effort = "max"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "EduardoZimelewicz_GradlePluginTester"
        property "sonar.organization", "eduardozimelewicz"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "c2d4d6b181c10dc7fba8411ae2227f4bb5d13041"
    }
}